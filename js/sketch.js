// Generated by CoffeeScript 2.5.1
var SIZE, released, xdraw;

import _ from 'https://cdn.skypack.dev/lodash';

import {
  ass,
  log,
  range
} from '../js/utils.js';

import {
  Board
} from '../js/board.js';

import {
  Button
} from '../js/button.js';

import {
  clickString,
  global,
  loadTree
} from '../js/globals.js';

SIZE = global.SIZE;

released = true; // prevention of touch bounce

window.preload = () => {
  var i, j, len, len1, letter, ref, ref1, results;
  global.database = loadJSON('./data/database.json');
  //global.database = loadJSON './database.json'
  //global.trees = loadJSON './data/trees.json'
  // global.tree = loadJSON './data/' + global.name + '.json'
  global.tree = loadJSON('./data/' + global.name + '.json');
  console.log(global.tree);
  ref = "rnbqkp";
  for (i = 0, len = ref.length; i < len; i++) {
    letter = ref[i];
    global.pics[letter] = loadImage('./images/b' + letter + '.png');
  }
  ref1 = "RNBQKP";
  results = [];
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    letter = ref1[j];
    results.push(global.pics[letter] = loadImage('./images/w' + letter.toLowerCase() + '.png'));
  }
  return results;
};

window.setup = () => {
  createCanvas(SIZE * 10.3, SIZE * 11);
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  global.board = new Board();
  global.chess = new Chess();
  console.log(global.tree);
  loadTree(0);
  return xdraw();
};

xdraw = () => {
  var button, i, len, ref, results;
  background('gray');
  textSize(SIZE);
  global.board.draw();
  ref = global.buttons;
  results = [];
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    results.push(button.draw());
  }
  return results;
};

window.keyPressed = () => {
  if (key === 'ArrowRight') {
    clickString('next');
  }
  if (key === 'ArrowLeft') {
    clickString('prev');
  }
  if (key === 'ArrowUp') {
    clickString('up');
  }
  if (key === 'ArrowDown') {
    clickString('down');
  }
  if (key === ' ') {
    clickString('flip');
  }
  if (key === 'Home') {
    clickString('first');
  }
  if (key === 'End') {
    clickString('last');
  }
  if (key === 'PageUp') {
    clickString('pgup');
  }
  if (key === 'PageDown') {
    clickString('pgdn');
  }
  xdraw();
  return false;
};

window.mousePressed = () => {
  var button, i, j, len, len1, ref, ref1, square;
  if (!released) {
    return;
  }
  released = false;
  ref = global.buttons.concat(global.board.buttons);
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    if (button.inside(mouseX, mouseY)) {
      button.onclick();
      xdraw();
      return false;
    }
  }
  ref1 = global.board.squares;
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    square = ref1[j];
    if (square.inside(mouseX, mouseY)) {
      square.onclick();
      xdraw();
      return false;
    }
  }
  return false;
};

window.mouseReleased = () => {
  released = true;
  return false;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLFFBQUEsRUFBQTs7QUFBQSxPQUFPLENBQVAsTUFBQTs7QUFDQSxPQUFBO0VBQVEsR0FBUjtFQUFZLEdBQVo7RUFBZ0IsS0FBaEI7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUSxLQUFSO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVEsTUFBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLFdBQVI7RUFBb0IsTUFBcEI7RUFBMkIsUUFBM0I7Q0FBQSxNQUFBOztBQUVBLElBQUEsR0FBTyxNQUFNLENBQUM7O0FBQ2QsUUFBQSxHQUFXLEtBUFg7O0FBU0EsTUFBTSxDQUFDLE9BQVAsR0FBaUIsQ0FBQSxDQUFBLEdBQUE7QUFDakIsTUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsTUFBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUE7RUFBQyxNQUFNLENBQUMsUUFBUCxHQUFrQixRQUFBLENBQVMsc0JBQVQsRUFBbkI7Ozs7RUFJQyxNQUFNLENBQUMsSUFBUCxHQUFjLFFBQUEsQ0FBUyxTQUFBLEdBQVksTUFBTSxDQUFDLElBQW5CLEdBQTBCLE9BQW5DO0VBQ2QsT0FBTyxDQUFDLEdBQVIsQ0FBWSxNQUFNLENBQUMsSUFBbkI7QUFDQTtFQUFBLEtBQUEscUNBQUE7O0lBQ0MsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFELENBQVgsR0FBc0IsU0FBQSxDQUFVLFlBQUEsR0FBZSxNQUFmLEdBQXdCLE1BQWxDO0VBRHZCO0FBRUE7QUFBQTtFQUFBLEtBQUEsd0NBQUE7O2lCQUNDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBRCxDQUFYLEdBQXNCLFNBQUEsQ0FBVSxZQUFBLEdBQWUsTUFBTSxDQUFDLFdBQVAsQ0FBQSxDQUFmLEdBQXNDLE1BQWhEO0VBRHZCLENBQUE7O0FBVGdCOztBQVlqQixNQUFNLENBQUMsS0FBUCxHQUFlLENBQUEsQ0FBQSxHQUFBO0VBQ2QsWUFBQSxDQUFhLElBQUEsR0FBSyxJQUFsQixFQUF3QixJQUFBLEdBQUssRUFBN0I7RUFDQSxTQUFBLENBQVUsTUFBVixFQUFpQixNQUFqQjtFQUNBLFFBQUEsQ0FBUyxNQUFUO0VBQ0EsTUFBTSxDQUFDLEtBQVAsR0FBZSxJQUFJLEtBQUosQ0FBQTtFQUNmLE1BQU0sQ0FBQyxLQUFQLEdBQWUsSUFBSSxLQUFKLENBQUE7RUFDZixPQUFPLENBQUMsR0FBUixDQUFZLE1BQU0sQ0FBQyxJQUFuQjtFQUNBLFFBQUEsQ0FBUyxDQUFUO1NBQ0EsS0FBQSxDQUFBO0FBUmM7O0FBVWYsS0FBQSxHQUFRLENBQUEsQ0FBQSxHQUFBO0FBQ1IsTUFBQSxNQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUE7RUFBQyxVQUFBLENBQVcsTUFBWDtFQUNBLFFBQUEsQ0FBUyxJQUFUO0VBQ0EsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFiLENBQUE7QUFDQTtBQUFBO0VBQUEsS0FBQSxxQ0FBQTs7aUJBQ0MsTUFBTSxDQUFDLElBQVAsQ0FBQTtFQURELENBQUE7O0FBSk87O0FBT1IsTUFBTSxDQUFDLFVBQVAsR0FBb0IsQ0FBQSxDQUFBLEdBQUE7RUFDbkIsSUFBRyxHQUFBLEtBQU8sWUFBVjtJQUE2QixXQUFBLENBQVksTUFBWixFQUE3Qjs7RUFDQSxJQUFHLEdBQUEsS0FBTyxXQUFWO0lBQTJCLFdBQUEsQ0FBWSxNQUFaLEVBQTNCOztFQUNBLElBQUcsR0FBQSxLQUFPLFNBQVY7SUFBMEIsV0FBQSxDQUFZLElBQVosRUFBMUI7O0VBQ0EsSUFBRyxHQUFBLEtBQU8sV0FBVjtJQUEyQixXQUFBLENBQVksTUFBWixFQUEzQjs7RUFDQSxJQUFHLEdBQUEsS0FBTyxHQUFWO0lBQW1CLFdBQUEsQ0FBWSxNQUFaLEVBQW5COztFQUNBLElBQUcsR0FBQSxLQUFPLE1BQVY7SUFBc0IsV0FBQSxDQUFZLE9BQVosRUFBdEI7O0VBQ0EsSUFBRyxHQUFBLEtBQU8sS0FBVjtJQUFxQixXQUFBLENBQVksTUFBWixFQUFyQjs7RUFDQSxJQUFHLEdBQUEsS0FBTyxRQUFWO0lBQXdCLFdBQUEsQ0FBWSxNQUFaLEVBQXhCOztFQUNBLElBQUcsR0FBQSxLQUFPLFVBQVY7SUFBMEIsV0FBQSxDQUFZLE1BQVosRUFBMUI7O0VBQ0EsS0FBQSxDQUFBO0FBQ0EsU0FBTztBQVhZOztBQWFwQixNQUFNLENBQUMsWUFBUCxHQUFzQixDQUFBLENBQUEsR0FBQTtBQUN0QixNQUFBLE1BQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQTtFQUFDLElBQUcsQ0FBSSxRQUFQO0FBQXFCLFdBQXJCOztFQUNBLFFBQUEsR0FBVTtBQUNWO0VBQUEsS0FBQSxxQ0FBQTs7SUFDQyxJQUFHLE1BQU0sQ0FBQyxNQUFQLENBQWMsTUFBZCxFQUFxQixNQUFyQixDQUFIO01BQ0MsTUFBTSxDQUFDLE9BQVAsQ0FBQTtNQUNBLEtBQUEsQ0FBQTtBQUNBLGFBQU8sTUFIUjs7RUFERDtBQU1BO0VBQUEsS0FBQSx3Q0FBQTs7SUFDQyxJQUFHLE1BQU0sQ0FBQyxNQUFQLENBQWMsTUFBZCxFQUFxQixNQUFyQixDQUFIO01BQ0MsTUFBTSxDQUFDLE9BQVAsQ0FBQTtNQUNBLEtBQUEsQ0FBQTtBQUNBLGFBQU8sTUFIUjs7RUFERDtTQU1BO0FBZnFCOztBQWlCdEIsTUFBTSxDQUFDLGFBQVAsR0FBdUIsQ0FBQSxDQUFBLEdBQUE7RUFDdEIsUUFBQSxHQUFXO1NBQ1g7QUFGc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdodHRwczovL2Nkbi5za3lwYWNrLmRldi9sb2Rhc2gnXHJcbmltcG9ydCB7YXNzLGxvZyxyYW5nZX0gZnJvbSAnLi4vanMvdXRpbHMuanMnXHJcbmltcG9ydCB7Qm9hcmR9IGZyb20gJy4uL2pzL2JvYXJkLmpzJ1xyXG5pbXBvcnQge0J1dHRvbn0gZnJvbSAnLi4vanMvYnV0dG9uLmpzJ1xyXG5pbXBvcnQge2NsaWNrU3RyaW5nLGdsb2JhbCxsb2FkVHJlZX0gZnJvbSAnLi4vanMvZ2xvYmFscy5qcydcclxuXHJcblNJWkUgPSBnbG9iYWwuU0laRVxyXG5yZWxlYXNlZCA9IHRydWUgIyBwcmV2ZW50aW9uIG9mIHRvdWNoIGJvdW5jZVxyXG5cclxud2luZG93LnByZWxvYWQgPSA9PlxyXG5cdGdsb2JhbC5kYXRhYmFzZSA9IGxvYWRKU09OICcuL2RhdGEvZGF0YWJhc2UuanNvbidcclxuXHQjZ2xvYmFsLmRhdGFiYXNlID0gbG9hZEpTT04gJy4vZGF0YWJhc2UuanNvbidcclxuXHQjZ2xvYmFsLnRyZWVzID0gbG9hZEpTT04gJy4vZGF0YS90cmVlcy5qc29uJ1xyXG5cdCMgZ2xvYmFsLnRyZWUgPSBsb2FkSlNPTiAnLi9kYXRhLycgKyBnbG9iYWwubmFtZSArICcuanNvbidcclxuXHRnbG9iYWwudHJlZSA9IGxvYWRKU09OICcuL2RhdGEvJyArIGdsb2JhbC5uYW1lICsgJy5qc29uJ1xyXG5cdGNvbnNvbGUubG9nIGdsb2JhbC50cmVlXHJcblx0Zm9yIGxldHRlciBpbiBcInJuYnFrcFwiXHJcblx0XHRnbG9iYWwucGljc1tsZXR0ZXJdID0gbG9hZEltYWdlICcuL2ltYWdlcy9iJyArIGxldHRlciArICcucG5nJ1xyXG5cdGZvciBsZXR0ZXIgaW4gXCJSTkJRS1BcIlxyXG5cdFx0Z2xvYmFsLnBpY3NbbGV0dGVyXSA9IGxvYWRJbWFnZSAnLi9pbWFnZXMvdycgKyBsZXR0ZXIudG9Mb3dlckNhc2UoKSArICcucG5nJ1xyXG5cclxud2luZG93LnNldHVwID0gPT5cclxuXHRjcmVhdGVDYW52YXMgU0laRSoxMC4zLCBTSVpFKjExXHJcblx0dGV4dEFsaWduIENFTlRFUixDRU5URVJcclxuXHRyZWN0TW9kZSBDRU5URVJcclxuXHRnbG9iYWwuYm9hcmQgPSBuZXcgQm9hcmQoKVxyXG5cdGdsb2JhbC5jaGVzcyA9IG5ldyBDaGVzcygpXHJcblx0Y29uc29sZS5sb2cgZ2xvYmFsLnRyZWVcclxuXHRsb2FkVHJlZSAwXHJcblx0eGRyYXcoKVxyXG5cclxueGRyYXcgPSA9PlxyXG5cdGJhY2tncm91bmQgJ2dyYXknXHJcblx0dGV4dFNpemUgU0laRVxyXG5cdGdsb2JhbC5ib2FyZC5kcmF3KClcclxuXHRmb3IgYnV0dG9uIGluIGdsb2JhbC5idXR0b25zXHJcblx0XHRidXR0b24uZHJhdygpXHJcblxyXG53aW5kb3cua2V5UHJlc3NlZCA9ID0+XHJcblx0aWYga2V5ID09ICdBcnJvd1JpZ2h0JyAgdGhlbiBjbGlja1N0cmluZyAnbmV4dCdcclxuXHRpZiBrZXkgPT0gJ0Fycm93TGVmdCcgdGhlbiBjbGlja1N0cmluZyAncHJldidcclxuXHRpZiBrZXkgPT0gJ0Fycm93VXAnICB0aGVuIGNsaWNrU3RyaW5nICd1cCdcclxuXHRpZiBrZXkgPT0gJ0Fycm93RG93bicgdGhlbiBjbGlja1N0cmluZyAnZG93bidcclxuXHRpZiBrZXkgPT0gJyAnIHRoZW4gY2xpY2tTdHJpbmcgJ2ZsaXAnXHJcblx0aWYga2V5ID09ICdIb21lJyB0aGVuIGNsaWNrU3RyaW5nICdmaXJzdCdcclxuXHRpZiBrZXkgPT0gJ0VuZCcgdGhlbiBjbGlja1N0cmluZyAnbGFzdCdcclxuXHRpZiBrZXkgPT0gJ1BhZ2VVcCcgdGhlbiBjbGlja1N0cmluZyAncGd1cCdcclxuXHRpZiBrZXkgPT0gJ1BhZ2VEb3duJyB0aGVuIGNsaWNrU3RyaW5nICdwZ2RuJ1xyXG5cdHhkcmF3KClcclxuXHRyZXR1cm4gZmFsc2VcclxuXHJcbndpbmRvdy5tb3VzZVByZXNzZWQgPSA9PlxyXG5cdGlmIG5vdCByZWxlYXNlZCB0aGVuIHJldHVyblxyXG5cdHJlbGVhc2VkID1mYWxzZVxyXG5cdGZvciBidXR0b24gaW4gZ2xvYmFsLmJ1dHRvbnMuY29uY2F0IGdsb2JhbC5ib2FyZC5idXR0b25zXHJcblx0XHRpZiBidXR0b24uaW5zaWRlIG1vdXNlWCxtb3VzZVlcclxuXHRcdFx0YnV0dG9uLm9uY2xpY2soKVxyXG5cdFx0XHR4ZHJhdygpXHJcblx0XHRcdHJldHVybiBmYWxzZVxyXG5cclxuXHRmb3Igc3F1YXJlIGluIGdsb2JhbC5ib2FyZC5zcXVhcmVzXHJcblx0XHRpZiBzcXVhcmUuaW5zaWRlIG1vdXNlWCxtb3VzZVlcclxuXHRcdFx0c3F1YXJlLm9uY2xpY2soKVxyXG5cdFx0XHR4ZHJhdygpXHJcblx0XHRcdHJldHVybiBmYWxzZVxyXG5cclxuXHRmYWxzZVxyXG5cclxud2luZG93Lm1vdXNlUmVsZWFzZWQgPSA9PlxyXG5cdHJlbGVhc2VkID0gdHJ1ZVxyXG5cdGZhbHNlIl19
//# sourceURL=c:\github\2023-019-ChessTree\coffee\sketch.coffee