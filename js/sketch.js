// Generated by CoffeeScript 2.5.1
var SIZE, hexToBase64, released, xdraw;

import cryptoJs from 'https://cdn.skypack.dev/crypto-js';

import _ from 'https://cdn.skypack.dev/lodash';

import {
  ass,
  log,
  range
} from '../js/utils.js';

import {
  Board
} from '../js/board.js';

import {
  Button
} from '../js/button.js';

import {
  setIndex,
  clickString,
  fixSuper,
  global,
  loadTree
} from '../js/globals.js';

SIZE = global.SIZE;

released = true; // prevention of touch bounce

hexToBase64 = (str) => {
  return btoa(String.fromCharCode.apply(null, str.replace(/\r|\n/g, "").replace(/([\da-fA-F]{2}) ?/g, "0x$1 ").replace(/ +$/, "").split(" ")));
};

window.preload = () => {
  var i, j, len, len1, letter, ref, ref1, results;
  global.treebase = loadJSON('./data/database.json');
  global.trees = loadJSON('./data/trees.json');
  ref = "rnbqkp";
  for (i = 0, len = ref.length; i < len; i++) {
    letter = ref[i];
    global.pics[letter] = loadImage('./images/b' + letter + '.png');
  }
  ref1 = "RNBQKP";
  results = [];
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    letter = ref1[j];
    results.push(global.pics[letter] = loadImage('./images/w' + letter.toLowerCase() + '.png'));
  }
  return results;
};

window.setup = () => {
  createCanvas(SIZE * 10.3, SIZE * 11);
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  global.board = new Board();
  loadTree(0);
  console.log(global.trees);
  global.chess = new Chess();
  //fen = global.chess.fen()
  //console.log hexToBase64(cryptoJs.SHA256(fen).toString()).slice(0,8), fen
  // coffee  lSpemS5l rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1
  // python: lSpemS5l rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1
  return xdraw();
};

xdraw = () => {
  var button, i, len, ref, results;
  background('gray');
  textSize(SIZE);
  global.board.draw();
  ref = global.buttons;
  results = [];
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    results.push(button.draw());
  }
  return results;
};

window.keyPressed = () => {
  if (key === 'ArrowRight') {
    clickString('next');
  }
  if (key === 'ArrowLeft') {
    clickString('prev');
  }
  if (key === 'ArrowUp') {
    clickString('up');
  }
  if (key === 'ArrowDown') {
    clickString('down');
  }
  if (key === ' ') {
    clickString('flip');
  }
  if (key === 'Home') {
    clickString('first');
  }
  if (key === 'End') {
    clickString('last');
  }
  if (key === 'PageUp') {
    clickString('pgup');
  }
  if (key === 'PageDown') {
    clickString('pgdn');
  }
  xdraw();
  return false;
};

window.mousePressed = () => {
  var button, i, j, len, len1, ref, ref1, square;
  if (!released) {
    return;
  }
  released = false;
  ref = global.buttons.concat(global.board.buttons);
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    if (button.inside(mouseX, mouseY)) {
      button.onclick();
      xdraw();
      return false;
    }
  }
  ref1 = global.board.squares;
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    square = ref1[j];
    //console.log 'squareA',square.i
    if (square.inside(mouseX, mouseY)) {
      console.log('squareB', square.i);
      square.onclick();
      xdraw();
      return false;
    }
  }
  return false;
};

window.mouseReleased = () => {
  released = true;
  return false;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLFdBQUEsRUFBQSxRQUFBLEVBQUE7O0FBQUEsT0FBTyxRQUFQLE1BQUE7O0FBQ0EsT0FBTyxDQUFQLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLEdBQVI7RUFBWSxHQUFaO0VBQWdCLEtBQWhCO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVEsS0FBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLE1BQVI7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUSxRQUFSO0VBQWlCLFdBQWpCO0VBQTZCLFFBQTdCO0VBQXNDLE1BQXRDO0VBQTZDLFFBQTdDO0NBQUEsTUFBQTs7QUFFQSxJQUFBLEdBQU8sTUFBTSxDQUFDOztBQUNkLFFBQUEsR0FBVyxLQVJYOztBQVVBLFdBQUEsR0FBYyxDQUFDLEdBQUQsQ0FBQSxHQUFBO1NBQ2IsSUFBQSxDQUFLLE1BQU0sQ0FBQyxZQUFZLENBQUMsS0FBcEIsQ0FBMEIsSUFBMUIsRUFDSixHQUFHLENBQUMsT0FBSixDQUFZLFFBQVosRUFBc0IsRUFBdEIsQ0FBeUIsQ0FBQyxPQUExQixDQUFrQyxvQkFBbEMsRUFBd0QsT0FBeEQsQ0FBZ0UsQ0FBQyxPQUFqRSxDQUF5RSxLQUF6RSxFQUFnRixFQUFoRixDQUFtRixDQUFDLEtBQXBGLENBQTBGLEdBQTFGLENBREksQ0FBTDtBQURhOztBQUlkLE1BQU0sQ0FBQyxPQUFQLEdBQWlCLENBQUEsQ0FBQSxHQUFBO0FBQ2pCLE1BQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBLE1BQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBO0VBQUMsTUFBTSxDQUFDLFFBQVAsR0FBa0IsUUFBQSxDQUFTLHNCQUFUO0VBQ2xCLE1BQU0sQ0FBQyxLQUFQLEdBQWUsUUFBQSxDQUFTLG1CQUFUO0FB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UCxDQUFBO01BQ0EsS0FBQSxDQUFBO0FBQ0EsYUFBTyxNQUpSOztFQUZEO1NBUUE7QUFqQnFCOztBQW1CdEIsTUFBTSxDQUFDLGFBQVAsR0FBdUIsQ0FBQSxDQUFBLEdBQUE7RUFDdEIsUUFBQSxHQUFXO1NBQ1g7QUFGc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3J5cHRvSnMgZnJvbSAnaHR0cHM6Ly9jZG4uc2t5cGFjay5kZXYvY3J5cHRvLWpzJ1xyXG5pbXBvcnQgXyAgICAgICAgICAgZnJvbSAnaHR0cHM6Ly9jZG4uc2t5cGFjay5kZXYvbG9kYXNoJ1xyXG5pbXBvcnQge2Fzcyxsb2cscmFuZ2V9IGZyb20gJy4uL2pzL3V0aWxzLmpzJ1xyXG5pbXBvcnQge0JvYXJkfSBmcm9tICcuLi9qcy9ib2FyZC5qcydcclxuaW1wb3J0IHtCdXR0b259IGZyb20gJy4uL2pzL2J1dHRvbi5qcydcclxuaW1wb3J0IHtzZXRJbmRleCxjbGlja1N0cmluZyxmaXhTdXBlcixnbG9iYWwsbG9hZFRyZWV9IGZyb20gJy4uL2pzL2dsb2JhbHMuanMnXHJcblxyXG5TSVpFID0gZ2xvYmFsLlNJWkVcclxucmVsZWFzZWQgPSB0cnVlICMgcHJldmVudGlvbiBvZiB0b3VjaCBib3VuY2VcclxuXHJcbmhleFRvQmFzZTY0ID0gKHN0cikgPT5cclxuXHRidG9hIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxcclxuXHRcdHN0ci5yZXBsYWNlKC9cXHJ8XFxuL2csIFwiXCIpLnJlcGxhY2UoLyhbXFxkYS1mQS1GXXsyfSkgPy9nLCBcIjB4JDEgXCIpLnJlcGxhY2UoLyArJC8sIFwiXCIpLnNwbGl0KFwiIFwiKSlcclxuXHJcbndpbmRvdy5wcmVsb2FkID0gPT5cclxuXHRnbG9iYWwudHJlZWJhc2UgPSBsb2FkSlNPTiAnLi9kYXRhL2RhdGFiYXNlLmpzb24nXHJcblx0Z2xvYmFsLnRyZWVzID0gbG9hZEpTT04gJy4vZGF0YS90cmVlcy5qc29uJ1xyXG5cdGZvciBsZXR0ZXIgaW4gXCJybmJxa3BcIlxyXG5cdFx0Z2xvYmFsLnBpY3NbbGV0dGVyXSA9IGxvYWRJbWFnZSAnLi9pbWFnZXMvYicgKyBsZXR0ZXIgKyAnLnBuZydcclxuXHRmb3IgbGV0dGVyIGluIFwiUk5CUUtQXCJcclxuXHRcdGdsb2JhbC5waWNzW2xldHRlcl0gPSBsb2FkSW1hZ2UgJy4vaW1hZ2VzL3cnICsgbGV0dGVyLnRvTG93ZXJDYXNlKCkgKyAnLnBuZydcclxuXHJcbndpbmRvdy5zZXR1cCA9ID0+XHJcblx0Y3JlYXRlQ2FudmFzIFNJWkUqMTAuMywgU0laRSoxMVxyXG5cclxuXHR0ZXh0QWxpZ24gQ0VOVEVSLENFTlRFUlxyXG5cdHJlY3RNb2RlIENFTlRFUlxyXG5cclxuXHRnbG9iYWwuYm9hcmQgPSBuZXcgQm9hcmQoKVxyXG5cdGxvYWRUcmVlIDBcclxuXHJcblx0Y29uc29sZS5sb2cgZ2xvYmFsLnRyZWVzXHJcblx0Z2xvYmFsLmNoZXNzID0gbmV3IENoZXNzKClcclxuXHQjZmVuID0gZ2xvYmFsLmNoZXNzLmZlbigpXHJcblx0I2NvbnNvbGUubG9nIGhleFRvQmFzZTY0KGNyeXB0b0pzLlNIQTI1NihmZW4pLnRvU3RyaW5nKCkpLnNsaWNlKDAsOCksIGZlblxyXG5cdCMgY29mZmVlICBsU3BlbVM1bCBybmJxa2Juci9wcHBwcHBwcC84LzgvNFAzLzgvUFBQUDFQUFAvUk5CUUtCTlIgYiBLUWtxIGUzIDAgMVxyXG5cdCMgcHl0aG9uOiBsU3BlbVM1bCBybmJxa2Juci9wcHBwcHBwcC84LzgvNFAzLzgvUFBQUDFQUFAvUk5CUUtCTlIgYiBLUWtxIGUzIDAgMVxyXG5cdFxyXG5cdHhkcmF3KClcclxuXHJcbnhkcmF3ID0gPT5cclxuXHRiYWNrZ3JvdW5kICdncmF5J1xyXG5cdHRleHRTaXplIFNJWkVcclxuXHRnbG9iYWwuYm9hcmQuZHJhdygpXHJcblx0Zm9yIGJ1dHRvbiBpbiBnbG9iYWwuYnV0dG9uc1xyXG5cdFx0YnV0dG9uLmRyYXcoKVxyXG5cclxud2luZG93LmtleVByZXNzZWQgPSA9PlxyXG5cdGlmIGtleSA9PSAnQXJyb3dSaWdodCcgIHRoZW4gY2xpY2tTdHJpbmcgJ25leHQnXHJcblx0aWYga2V5ID09ICdBcnJvd0xlZnQnIHRoZW4gY2xpY2tTdHJpbmcgJ3ByZXYnXHJcblx0aWYga2V5ID09ICdBcnJvd1VwJyAgdGhlbiBjbGlja1N0cmluZyAndXAnXHJcblx0aWYga2V5ID09ICdBcnJvd0Rvd24nIHRoZW4gY2xpY2tTdHJpbmcgJ2Rvd24nXHJcblx0aWYga2V5ID09ICcgJyB0aGVuIGNsaWNrU3RyaW5nICdmbGlwJ1xyXG5cdGlmIGtleSA9PSAnSG9tZScgdGhlbiBjbGlja1N0cmluZyAnZmlyc3QnXHJcblx0aWYga2V5ID09ICdFbmQnIHRoZW4gY2xpY2tTdHJpbmcgJ2xhc3QnXHJcblx0aWYga2V5ID09ICdQYWdlVXAnIHRoZW4gY2xpY2tTdHJpbmcgJ3BndXAnXHJcblx0aWYga2V5ID09ICdQYWdlRG93bicgdGhlbiBjbGlja1N0cmluZyAncGdkbidcclxuXHR4ZHJhdygpXHJcblx0cmV0dXJuIGZhbHNlXHJcblxyXG53aW5kb3cubW91c2VQcmVzc2VkID0gPT5cclxuXHRpZiBub3QgcmVsZWFzZWQgdGhlbiByZXR1cm5cclxuXHRyZWxlYXNlZCA9ZmFsc2VcclxuXHRmb3IgYnV0dG9uIGluIGdsb2JhbC5idXR0b25zLmNvbmNhdCBnbG9iYWwuYm9hcmQuYnV0dG9uc1xyXG5cdFx0aWYgYnV0dG9uLmluc2lkZSBtb3VzZVgsbW91c2VZXHJcblx0XHRcdGJ1dHRvbi5vbmNsaWNrKClcclxuXHRcdFx0eGRyYXcoKVxyXG5cdFx0XHRyZXR1cm4gZmFsc2VcclxuXHJcblx0Zm9yIHNxdWFyZSBpbiBnbG9iYWwuYm9hcmQuc3F1YXJlc1xyXG5cdFx0I2NvbnNvbGUubG9nICdzcXVhcmVBJyxzcXVhcmUuaVxyXG5cdFx0aWYgc3F1YXJlLmluc2lkZSBtb3VzZVgsbW91c2VZXHJcblx0XHRcdGNvbnNvbGUubG9nICdzcXVhcmVCJyxzcXVhcmUuaVxyXG5cdFx0XHRzcXVhcmUub25jbGljaygpXHJcblx0XHRcdHhkcmF3KClcclxuXHRcdFx0cmV0dXJuIGZhbHNlXHJcblxyXG5cdGZhbHNlXHJcblxyXG53aW5kb3cubW91c2VSZWxlYXNlZCA9ID0+XHJcblx0cmVsZWFzZWQgPSB0cnVlXHJcblx0ZmFsc2UiXX0=
//# sourceURL=c:\github\2023-019-ChessTree\coffee\sketch.coffee